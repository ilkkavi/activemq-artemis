<?xml version='1.0'?>

<configuration xmlns="urn:activemq" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">
    <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq:core ">
        <name>a</name>
        
        <persistence-enabled>true</persistence-enabled>

        <!-- this could be ASYNCIO, MAPPED, NIO ASYNCIO: Linux Libaio MAPPED: mmap files NIO: Plain Java Files -->
        <journal-type>NIO</journal-type>

        <paging-directory>/artemis-data/paging</paging-directory>

        <bindings-directory>/artemis-data/bindings</bindings-directory>

        <journal-directory>/artemis-data/journal</journal-directory>

        <large-messages-directory>/artemis-data/large-messages
        </large-messages-directory>

        <journal-datasync>true</journal-datasync>

        <journal-min-files>2</journal-min-files>

        <journal-pool-files>15</journal-pool-files>

        <journal-buffer-timeout>788000</journal-buffer-timeout>


        <!-- how often we are looking for how many bytes are being used on the disk in ms -->
        <disk-scan-period>5000</disk-scan-period>

        <!-- once the disk hits this limit the system will block, or close the connection in certain protocols that won't support flow control. -->
        <max-disk-usage>97</max-disk-usage>

        <!-- should the broker detect dead locks and other issues -->
        <critical-analyzer>true</critical-analyzer>

        <critical-analyzer-timeout>120000</critical-analyzer-timeout>

        <critical-analyzer-check-period>60000</critical-analyzer-check-period>

        <critical-analyzer-policy>HALT</critical-analyzer-policy>

        <acceptors>
            <acceptor name="invm-acceptor">vm://0</acceptor>
            <acceptor name="artemis">tcp://0.0.0.0:61616?anycastPrefix=jms.queue.;multicastPrefix=jms.topic.</acceptor>
            <acceptor name="ssl">tcp://0.0.0.0:61617?anycastPrefix=jms.queue.;multicastPrefix=jms.topic.;sslEnabled=true;other_ssL_options</acceptor>
        </acceptors>
        <connectors>
            <connector name="invm-connector">vm://0</connector>
            <connector name="netty-connector">tcp://ip-to-broker-a:61616</connector>
            <connector name="keh2b-connector">tcp://ip-to-broker-b:61616</connector>
            </connectors>
    
        <broadcast-groups>
            <broadcast-group name="cluster-broadcast-group">
                <local-bind-address>ip-to-broker-a</local-bind-address>
                <group-address>${udp-address:231.7.7.7}</group-address>
                <group-port>9876</group-port>
                <broadcast-period>100</broadcast-period>
                <connector-ref>netty-connector</connector-ref>
            </broadcast-group>
        </broadcast-groups>
    
        <discovery-groups>
            <discovery-group name="cluster-discovery-group">
                <group-address>${udp-address:231.7.7.7}</group-address>
                <group-port>9876</group-port>
                <refresh-timeout>10000</refresh-timeout>
            </discovery-group>
        </discovery-groups>

        <cluster-connections>
            <cluster-connection name="cluster">
                <connector-ref>netty-connector</connector-ref>
                <retry-interval>500</retry-interval>
                <reconnect-attempts>5</reconnect-attempts>
                <use-duplicate-detection>true</use-duplicate-detection>
                <message-load-balancing>ON_DEMAND</message-load-balancing>
                <max-hops>1</max-hops>
                <discovery-group-ref discovery-group-name="cluster-discovery-group"/>
            </cluster-connection>
        </cluster-connections>

        <ha-policy>
            <replication>
                <master>
                    <check-for-live-server>true</check-for-live-server>
                </master>
            </replication>
        </ha-policy>
        
        <mask-password>true</mask-password>
        <cluster-user>admin.user</cluster-user>
        <cluster-password>pass</cluster-password>

        <!-- security-settings, address-settings, addresses -->
        
    </core>
</configuration>
